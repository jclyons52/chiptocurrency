{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["cryptoName","Behind","rate","max","current","offset","H1Behind","styled","h1","props","App","useState","setOffset","useEffect","window","onscroll","pageYOffset","setTimeout","scroll","scrollToBottom","duration","className","style","height","zIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAKMA,EAAa,iBAEbC,EAAkE,SAAC,GAIlE,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,IAGMC,EADF,EADJC,OAEyBH,EACzB,OACE,cAACI,EAAD,CAAUD,OAAQD,EAAUD,EAAMC,EAAUD,EAA5C,SAAkDH,KAIhDM,EAAWC,IAAOC,GAAV,wKAGN,SAACC,GAAD,OAA+BA,EAAMJ,UA2C9BK,MAnCf,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACNN,EADM,KACEO,EADF,KAab,OAVAC,qBAAU,WACRC,OAAOC,SAAW,WAChBH,EAAUE,OAAOE,gBAElB,IACHH,qBAAU,WACRI,YAAW,WACTC,gBAAOC,eAAe,CAAEC,SAAU,QACjC,OACF,IAED,eAAC,mBAAD,WACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAEf,sBAAKC,MAAO,CAAEC,OAAQ,OAASF,UAAU,YAAzC,UACE,oBAAIC,MAAO,CAAEE,OAAQ,GAArB,SAA2BxB,IAC3B,cAAC,EAAD,CAAQE,KAAM,EAAGC,IAAK,IAAKE,OAAQA,IACnC,cAAC,EAAD,CAAQH,KAAM,EAAGC,IAAK,IAAKE,OAAQA,IACnC,cAAC,EAAD,CAAQH,KAAM,EAAGC,IAAK,IAAKE,OAAQA,OAErC,qBAAKgB,UAAU,qBAEjB,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,uBC3CKI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f22a9624.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { ParallaxProvider } from \"react-scroll-parallax\";\n\nconst cryptoName = \"CHIPTOCURRENCY\";\n\nconst Behind: React.FC<{ rate: number; max: number; offset: number }> = ({\n  rate,\n  max,\n  offset,\n}) => {\n  const current = offset / rate;\n  return (\n    <H1Behind offset={current < max ? current : max}>{cryptoName}</H1Behind>\n  );\n};\n\nconst H1Behind = styled.h1`\n  transform: translate3d(\n      -5px,\n      ${(props: { offset: number }) => props.offset}px,\n      0px\n    )\n    scale(0.99705);\n  color: #009fff82;\n  margin-bottom: -275px;\n`;\n\nfunction App() {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    window.onscroll = () => {\n      setOffset(window.pageYOffset);\n    };\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      scroll.scrollToBottom({ duration: 3000 });\n    }, 2000);\n  }, []);\n  return (\n    <ParallaxProvider>\n      <div className=\"app\">\n        <div className=\"upper-border\"></div>\n\n        <div style={{ height: \"4em\" }} className=\"container\">\n          <h1 style={{ zIndex: 2 }}>{cryptoName}</h1>\n          <Behind rate={2} max={300} offset={offset} />\n          <Behind rate={3} max={200} offset={offset} />\n          <Behind rate={4} max={100} offset={offset} />\n        </div>\n        <div className=\"bottom-border\"></div>\n      </div>\n      <div className=\"app\">\n        <div className=\"container\">\n          <div className=\"circle\">C</div>\n        </div>\n      </div>\n    </ParallaxProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}